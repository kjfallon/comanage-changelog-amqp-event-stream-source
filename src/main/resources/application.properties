# Logging: only log messages from supporting libraries if there is a warning or error
logging.level.org.springframework=WARN
logging.level.org.springframework.integration=WARN
logging.level.org.springframework.cloud.stream=WARN
logging.level.com.ulisesbocchio=WARN

# Logging: log informational messages from this application in addition to any warnings or errors
logging.level.com.example.comanagechangelogamqpeventstreamsource=INFO
logging.path=./target
logging.file=comanage-changelog-processor.log

# full path in the execution environment/host of the file that the COmanange Changelog Provisioner logs to
com.example.comanage.changelog.path=./allCO_changelog.log

# Do you want to write CoGroup updates to AMQP?
com.example.comanage.publish.CoGroup=true

# Do you want to write CoPerson updates to AMQP?
com.example.comanage.publish.CoPerson=true

# Do you want to write any JSON strings in changelog to AMQP?
com.example.comanage.publish.allJson=true

# Do you want to write any text in changelog to AMQP?
com.example.comanage.publish.allStrings=true

# RabbitMQ authentication
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
spring.rabbitmq.password=ENC(Dh2Th5opMU3njAK4G44BAgwe1nhf2s2SMCZFG6LD+S3m7sNPnbqSi6NVyLbdQ5qy)

#  Create a durable RabbitMQ fanout exchange if it does not already exist
spring.cloud.stream.bindings.output.destination=COmanageExchange
spring.cloud.stream.rabbit.bindings.output.producer.declareExchange=true
spring.cloud.stream.rabbit.bindings.output.producer.exchangeDurable=true
spring.cloud.stream.rabbit.bindings.output.producer.exchangeType=fanout

# Support for encrypting the property file values in this file.
# If your JVM is older than jdk8u161 and does not include the Java Cryptography Extension (JCE) Unlimited Strength
# Jurisdiction Policy Files then you need to add them to use modern strength cryptography.
# https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8189377
# https://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html
jasypt.encryptor.provider-name=SunJCE
jasypt.encryptor.algorithm=PBEWithHmacSHA512AndAES_256
jasypt.encryptor.ivGeneratorClassname=org.jasypt.salt.RandomIVGenerator
jasypt.encryptor.keyObtentionIterations=3000
# The password used to encrypt/decrypt should be managed externally to this application.  This configuration expects
# the password to be present in the execution environment variable named ENV_VAR_SERVICE_PASSWORD.  If that is not set
# then this configuration defaults to using a password of "changeme".  Which is what the RabbitMQ password above is
# encrypted with.
jasypt.encryptor.password=${ENV_VAR_SERVICE_PASSWORD:changeme}
